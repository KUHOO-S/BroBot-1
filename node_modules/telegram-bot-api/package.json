{
  "_from": "telegram-bot-api",
  "_id": "telegram-bot-api@1.3.3",
  "_inBundle": false,
  "_integrity": "sha512-0qRmEaUUIE3D3HLyqkYoN78jndSSx5HsOIMe3jB+ix3cUw53drjwKWyOWattuQ4l/TD1Id96DRzVM1uKd60k6w==",
  "_location": "/telegram-bot-api",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "telegram-bot-api",
    "fetchSpec": "latest",
    "name": "telegram-bot-api",
    "raw": "telegram-bot-api",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/telegram-bot-api/-/telegram-bot-api-1.3.3.tgz",
  "_shasum": "67ed130b8f7a094b08bbc7842667f63b8013a046",
  "_shrinkwrap": null,
  "_spec": "telegram-bot-api",
  "_where": "/home/kuhoo/brobot",
  "author": {
    "email": "mast@imast.ru",
    "name": "Max Stepanov"
  },
  "bugs": {
    "url": "https://github.com/mast/telegram-bot-api/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Max Stepanov",
      "email": "mast@imast.ru"
    },
    {
      "name": "Stanislav Gumeniuk",
      "email": "i@vigo.su"
    },
    {
      "name": "Ali Mihandoost",
      "email": "i@ali.md"
    }
  ],
  "dependencies": {
    "bluebird": "^3.4.0",
    "body-parser": "1.18.2",
    "express": "4.16.3",
    "extend": "2.0.2",
    "request": "2.88.0",
    "request-promise": "4.2.2"
  },
  "deprecated": false,
  "description": "Node.js module for Telegram Bot API (https://core.telegram.org/bots/api)",
  "devDependencies": {
    "mocha": "5.2.0",
    "should": "9.0.2"
  },
  "homepage": "https://github.com/mast/telegram-bot-api#readme",
  "keywords": [
    "api",
    "bot",
    "node.js",
    "nodejs",
    "telegram",
    "telegram bot"
  ],
  "license": "MIT",
  "main": "./lib/telegram-bot.js",
  "name": "telegram-bot-api",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mast/telegram-bot-api.svg?branch=master)](https://travis-ci.org/mast/telegram-bot-api)\n[![npm version](https://badge.fury.io/js/telegram-bot-api.svg)](https://badge.fury.io/js/telegram-bot-api)\n\n## Introduction\n\nNode.js module for Telegram Bot API (https://core.telegram.org/bots/api).\nYou can use it simply as an API if you want to implement logic by yourself, or\nyou can enable retrieving of updates and get messages sent to your bot in a callback\n\nIMPORTANT: In version 1.0.0. promises are implemented in backward compatible way, \ni.e. old code (with callbacks) should also work with new version of the API\n\n## Installation\n\nYou can use npm package to get module installed\n\n```\nnpm install telegram-bot-api\n```\n\n## Example (simple API usage)\n\n```\nvar telegram = require('telegram-bot-api');\n\nvar api = new telegram({\n        token: '<PUT YOUR TOKEN HERE>'\n});\n\napi.getMe()\n.then(function(data)\n{\n    console.log(data);\n})\n.catch(function(err)\n{\n\tconsole.log(err);\n});\n```\n\n## Supported methods\n\nFor method parameters and description, please refer to official documentation\nhttps://core.telegram.org/bots/api\n\nThis module supports following methods so far:\n\n```\ngetMe\nsendMessage\nforwardMessage\nsendPhoto\nsendAudio\nsendVoice\nsendDocument\nsendSticker\nsendVideo\nsendLocation\nsendVenue\nsendContact\nsendChatAction\ngetUserProfilePhotos\ngetUpdates\nsetWebhook\ngetFile\nanswerInlineQuery\nanswerCallbackQuery\neditMessageText\neditMessageCaption\neditMessageReplyMarkup\nkickChatMember\nunbanChatMember\nexportChatInviteLink\nleaveChat\ngetChat\ngetChatAdministrators\ngetChatMembersCount\ngetChatMember\n```\n\n## Retrieve messages sent to your bot\n\nYou can force this API to retrieve messages sent to your Telegram Bot. API will emit *message* event as soon as some message is received by your bot. Please note, that you need explicitly configure this behaviour, as it is disabled by default.\n\n```\nvar telegram = require('telegram-bot-api');\n\nvar api = new telegram({\n        token: '<PUT YOUR TOKEN HERE>',\n        updates: {\n        \tenabled: true\n    }\n});\n\napi.on('message', function(message)\n{\n\t// Received text message\n    console.log(message);\n});\n\napi.on('inline.query', function(message)\n{\n\t// Received inline query\n    console.log(message);\n});\n\napi.on('inline.result', function(message)\n{\n\t// Received chosen inline result\n    console.log(message);\n});\n\napi.on('inline.callback.query', function(message)\n{\n\t// New incoming callback query\n    console.log(message);\n});\n\napi.on('edited.message', function(message)\n{\n\t// Message that was edited\n    console.log(message);\n});\n\napi.on('update', function(message)\n{\n\t// Generic update object\n\t// Subscribe on it in case if you want to handle all possible\n\t// event types in one callback\n    console.log(message);\n});\n\n```\n\n## Example (send photo)\n\n```\nvar telegram = require('telegram-bot-api');\n\nvar api = new telegram({\n\ttoken: '<PUT YOUR TOKEN HERE>',\n});\n\napi.sendPhoto({\n\tchat_id: <YOUR CHAT ID>,\n\tcaption: 'This is my test image',\n\n\t// you can also send file_id here as string (as described in telegram bot api documentation)\n\tphoto: '/path/to/file/test.jpg'\n})\n.then(function(data)\n{\n\tconsole.log(util.inspect(data, false, null));\n});\n```\n\n## Other examples\n\nPlease refer to `/examples` folder of repository.\n\n\n## API configuration\n\nYou should pass configuration object to API constructor, which have following fields.\n\n| Param name | Mandatory? | Description |\n|---|---|---|\n| token | Mandatory | Telegram access token (received from BotFather) |\n| http_proxy | Optional | This object is optional. Use it in case if you want API to connect through proxy |\n| http_proxy.host | Mandatory | Proxy hostname |\n| http_proxy.port | Mandatory | Proxy port |\n| http_proxy.user | Optional | Username (authentication) |\n| http_proxy.password | Optional | Password (authentication) |\n| http_proxy.https | Optional | Pass `true` if you want `https` used as a protocol. Default `false` |\n| updates | Optional | Pass it to configure how API will handle incoming messages to your bot |\n| updates.enabled | Optional | `true` – API will listen for messages and provide you with callback. `false` – API will not listen for messages, care about it by yourself. Default `false` |\n| updates.get_interval | Optional | This number of milliseconds API will poll Telegram servers for messages. Default `1000` |\n| updates.pooling_timeout | Optional | This number of milliseconds API will keep connection with Telegram servers alive. Default `0` |\n\nExample of configuration object\n\n```\n{\n\ttoken: '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11',\n\thttp_proxy: {\n\t\thost: 'proxy.example.com',\n\t\tport: 8080,\n\t\tusername: 'mylogin',\n\t\tpassword: 'mypassword'\n\t},\n\tupdates: {\n\t\tenabled: true,\n\t\tget_interval: 2000\n\t}\n}\n```\n\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Max Stepanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mast/telegram-bot-api.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "1.3.3"
}
